basePath: /
definitions:
  controllers.Book:
    properties:
      author:
        type: string
      available_copies:
        type: integer
      genre:
        type: string
      id:
        type: integer
      isbn:
        type: string
      language:
        type: string
      shelf_number:
        type: string
      title:
        type: string
    type: object
  controllers.BorrowRequest:
    properties:
      bookId:
        type: integer
      userId:
        type: integer
    type: object
  controllers.LoginCredentials:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  controllers.User:
    properties:
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is the back-end API for an online library management system
  title: Library Management API 文档
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: 获取图书馆中的所有书籍，支持搜索 / Retrieve all books in the library, supports
        search
      parameters:
      - description: 搜索关键词 / Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应 / Success Response
          schema:
            items:
              $ref: '#/definitions/controllers.Book'
            type: array
        "500":
          description: 服务器错误 / Server error
          schema:
            type: string
      summary: 获取所有图书 / Get All Books
      tags:
      - 图书管理 / Book Management
    post:
      consumes:
      - application/json
      description: 添加一本新书到图书馆 / Add a new book to the library
      parameters:
      - description: 书籍信息 / Book Information
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/controllers.Book'
      produces:
      - application/json
      responses:
        "201":
          description: 成功响应 / Success Response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 无效的请求数据 / Invalid request body
          schema:
            type: string
        "500":
          description: 数据库错误 / Database error
          schema:
            type: string
      summary: 添加新书 / Add a New Book
      tags:
      - 图书管理 / Book Management
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: 通过 ID 删除书籍 / Delete a book by ID
      parameters:
      - description: 书籍 ID / Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应 / Success Response
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 无效的图书 ID / Invalid book ID
          schema:
            type: string
        "404":
          description: 图书未找到 / Book not found
          schema:
            type: string
        "500":
          description: 数据库错误 / Database error
          schema:
            type: string
      summary: 删除图书 / Delete a Book
      tags:
      - 图书管理 / Book Management
    get:
      consumes:
      - application/json
      description: 通过 ID 获取一本书的信息 / Retrieve details of a book by ID
      parameters:
      - description: 书籍 ID / Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应 / Success Response
          schema:
            $ref: '#/definitions/controllers.Book'
        "400":
          description: 无效的图书 ID / Invalid book ID
          schema:
            type: string
        "404":
          description: 图书未找到 / Book not found
          schema:
            type: string
        "500":
          description: 服务器错误 / Server error
          schema:
            type: string
      summary: 获取单本图书 / Get a Book by ID
      tags:
      - 图书管理 / Book Management
    put:
      consumes:
      - application/json
      description: 通过 ID 更新书籍信息 / Update book information by ID
      parameters:
      - description: 书籍 ID / Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新后的书籍信息 / Updated Book Information
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/controllers.Book'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应 / Success Response
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 无效的图书 ID / Invalid book ID
          schema:
            type: string
        "404":
          description: 图书未找到 / Book not found
          schema:
            type: string
        "500":
          description: 数据库错误 / Database error
          schema:
            type: string
      summary: 更新图书 / Update a Book
      tags:
      - 图书管理 / Book Management
  /borrow:
    post:
      consumes:
      - application/json
      description: 用户借阅书籍 / Users borrow a book
      parameters:
      - description: 借书请求 / Borrow Request
        in: body
        name: borrowRequest
        required: true
        schema:
          $ref: '#/definitions/controllers.BorrowRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应 / Success Response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 无效的请求数据 / Invalid request data
          schema:
            type: string
        "404":
          description: 图书未找到 / Book not found
          schema:
            type: string
        "500":
          description: 数据库错误 / Database error
          schema:
            type: string
      summary: 借书 / Borrow a Book
      tags:
      - 借阅管理 / Borrow Management
  /borrow/return:
    post:
      consumes:
      - application/json
      description: 用户归还书籍 / Users return a book
      parameters:
      - description: 还书请求 / Return Request
        in: body
        name: returnRequest
        required: true
        schema:
          $ref: '#/definitions/controllers.BorrowRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应 / Success Response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 无效的请求数据 / Invalid request data
          schema:
            type: string
        "404":
          description: 没有找到借阅记录 / No active borrow record found
          schema:
            type: string
        "500":
          description: 数据库错误 / Database error
          schema:
            type: string
      summary: 还书 / Return a Book
      tags:
      - 借阅管理 / Borrow Management
  /login:
    post:
      consumes:
      - application/json
      description: 允许用户登录并获取 JWT 令牌 / Allows users to log in and receive a JWT token
      parameters:
      - description: 用户登录信息 / User Login Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应 / Success Response
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 请求数据无效 / Invalid request data
          schema:
            type: string
        "401":
          description: 无效的用户名或密码 / Invalid username or password
          schema:
            type: string
        "500":
          description: 服务器错误 / Server error
          schema:
            type: string
      summary: 用户登录 / User Login
      tags:
      - 认证 / Authentication
  /register:
    post:
      consumes:
      - application/json
      description: 允许用户注册新账号 / Allows users to register a new account
      parameters:
      - description: 用户信息 / User Information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.User'
      produces:
      - application/json
      responses:
        "201":
          description: 成功响应 / Success Response
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 请求数据无效 / Invalid request data
          schema:
            type: string
        "500":
          description: 服务器错误 / Server error
          schema:
            type: string
      summary: 用户注册 / User Registration
      tags:
      - 认证 / Authentication
swagger: "2.0"
