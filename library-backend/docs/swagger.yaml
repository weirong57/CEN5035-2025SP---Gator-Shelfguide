definitions:
  models.Book:
    properties:
      author:
        type: string
      available_copies:
        type: integer
      genre:
        type: string
      id:
        type: integer
      isbn:
        type: string
      language:
        type: string
      shelf_number:
        type: string
      title:
        type: string
    type: object
  models.BorrowRequest:
    properties:
      bookId:
        description: 图书 ID
        example: 101
        type: integer
      userId:
        description: 用户 ID
        example: 1
        type: integer
    type: object
  models.BorrowingRecord:
    properties:
      author:
        description: 图书作者
        type: string
      book_id:
        type: integer
      borrowed_at:
        type: string
      due_date:
        type: string
      id:
        type: integer
      isbn:
        description: 图书ISBN
        type: string
      returned_at:
        type: string
      status:
        description: Borrowing, Returned, Overdue
        type: string
      title:
        description: 图书标题
        type: string
      user_id:
        type: integer
    type: object
  models.LoginCredentials:
    properties:
      password:
        example: securePass123
        type: string
      username:
        example: alice123
        type: string
    type: object
  models.ReservationRequest:
    properties:
      bookId:
        example: 101
        type: integer
      userId:
        example: 1
        type: integer
    type: object
  models.ReviewRequest:
    properties:
      bookId:
        description: 图书 ID
        example: 101
        type: integer
      comment:
        description: 评论内容
        example: Great book!
        type: string
      rating:
        description: 评分（1-5）
        example: 5
        type: integer
      userId:
        description: 用户 ID
        example: 1
        type: integer
    type: object
  models.User:
    properties:
      created_at:
        description: 用户创建时间
        type: string
      id:
        description: 用户ID
        example: 1
        type: integer
      password:
        example: securePass123
        type: string
      role:
        example: user
        type: string
      username:
        example: alice123
        type: string
    type: object
info:
  contact: {}
paths:
  /admin/books:
    post:
      consumes:
      - application/json
      description: 管理员添加图书到数据库中 (Add a new book with full information)
      parameters:
      - description: 图书信息 (Book Information)
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "201":
          description: 添加成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求数据错误
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 数据库错误
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 添加图书 (Admin only)
      tags:
      - 管理员功能 (Admin)
  /admin/books/{id}:
    delete:
      consumes:
      - application/json
      description: 管理员根据图书 ID 删除图书 (Delete a book by ID)
      parameters:
      - description: 图书 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 无效 ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 图书未找到
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 数据库错误
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 删除图书 (Admin only)
      tags:
      - 管理员功能 (Admin)
  /books:
    get:
      consumes:
      - application/json
      description: 获取图书列表，支持按关键词搜索 (Retrieve all books in the library, optionally
        filter by keyword)
      parameters:
      - description: 搜索关键词 (Search keyword)
        in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应 (Success Response)
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "500":
          description: 服务器错误 (Server error)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取所有图书 (Retrieve all books)
      tags:
      - 图书管理 (Book Management)
  /books/{id}:
    get:
      consumes:
      - application/json
      description: 根据图书 ID 获取详细信息 (Retrieve detailed information of a specific book
        by ID)
      parameters:
      - description: 图书 ID (Book ID)
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应 (Success Response)
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: 无效 ID (Invalid book ID)
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 图书未找到 (Book not found)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 服务器错误 (Server error)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取单本图书信息 (Retrieve book details by ID)
      tags:
      - 图书管理 (Book Management)
    put:
      consumes:
      - application/json
      description: 根据图书 ID 更新对应信息 (Update book details by ID)
      parameters:
      - description: 图书 ID (Book ID)
        in: path
        name: id
        required: true
        type: integer
      - description: 更新后的图书信息 (Updated Book Information)
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功 (Success Response)
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 无效 ID 或数据错误 (Invalid book ID or body)
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 图书未找到 (Book not found)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 数据库错误 (Database error)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 更新图书 (Update book by ID)
      tags:
      - 图书管理 (Book Management)
  /borrow:
    post:
      consumes:
      - application/json
      description: 用户借阅图书，库存 -1，并创建借阅记录 (User borrows a book, reduces available copies,
        and creates borrowing record)
      parameters:
      - description: 借阅请求参数 (Borrow Request)
        in: body
        name: borrowRequest
        required: true
        schema:
          $ref: '#/definitions/models.BorrowRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 借阅成功 (Success Response)
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求数据错误 (Invalid request data)
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 图书未找到或无库存 (Book not found or unavailable)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 数据库错误 (Database error)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 借阅图书 (User borrows a book)
      tags:
      - 借阅管理 (Borrow Management)
  /borrow/return:
    post:
      consumes:
      - application/json
      description: 用户归还图书，更新记录与库存，计算逾期罚款 (User returns a borrowed book, updates record
        and stock, calculates fine)
      parameters:
      - description: 归还请求参数 (Return Request)
        in: body
        name: returnRequest
        required: true
        schema:
          $ref: '#/definitions/models.BorrowRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 归还成功 (Success Response)
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求数据错误 (Invalid request data)
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 无有效借阅记录 (No active borrow record found)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 数据库错误 (Database error)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 归还图书 (User returns a book)
      tags:
      - 借阅管理 (Borrow Management)
  /login:
    post:
      consumes:
      - application/json
      description: User logs in and receives a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.LoginCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid username or password
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login and get JWT
      tags:
      - Authentication
  /register:
    post:
      consumes:
      - application/json
      description: Allows a new user to register with username, password, and role
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Registration successful
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Authentication
  /reservations:
    get:
      consumes:
      - application/json
      description: 获取指定用户的所有图书预约信息，包括状态与时间 (Retrieve all reservation records for a
        specific user, including status and timestamps)
      parameters:
      - description: 用户 ID (User ID)
        in: query
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 预约记录列表 (List of reservations)
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: 用户 ID 缺失 (User ID is required)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 数据库错误 (Database error)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 查询用户预约记录 (Retrieve reservation records of a user)
      tags:
      - 图书预约 (Reservation)
    post:
      consumes:
      - application/json
      description: 用户预约图书，系统将创建状态为 PENDING 的记录 (User reserves a book; reservation
        is marked as PENDING)
      parameters:
      - description: 预约请求参数 (Reservation Request)
        in: body
        name: reservation
        required: true
        schema:
          $ref: '#/definitions/models.ReservationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 预约成功 (Reservation created successfully)
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 无效请求数据 (Invalid request data)
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 图书未找到 (Book not found)
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: 已有未处理预约 (Active reservation already exists)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 数据库或事务错误 (Database or transaction error)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 创建图书预约 (Create a new book reservation)
      tags:
      - 图书预约 (Reservation)
  /reservations/cancel:
    post:
      consumes:
      - application/json
      description: 用户取消状态为 PENDING 的预约记录，更新状态为 CANCELLED (Cancel a PENDING reservation
        for a book)
      parameters:
      - description: 取消预约参数 (Reservation Request)
        in: body
        name: reservation
        required: true
        schema:
          $ref: '#/definitions/models.ReservationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 取消成功 (Reservation cancelled successfully)
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 无效请求数据 (Invalid request data)
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 未找到有效预约 (No active reservation found)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 数据库错误 (Database error)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 取消图书预约 (Cancel an existing reservation)
      tags:
      - 图书预约 (Reservation)
  /reviews:
    get:
      consumes:
      - application/json
      description: 获取指定图书的所有用户书评，包括评分、内容和评论者 (Get all reviews for a specific book,
        including rating, comment, and reviewer)
      parameters:
      - description: 图书 ID (Book ID)
        in: query
        name: bookId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 书评列表 (List of reviews)
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: 缺少图书 ID (Book ID is required)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 数据库错误 (Database error)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取图书书评列表 (Retrieve reviews for a book)
      tags:
      - 书评 (Review)
    post:
      consumes:
      - application/json
      description: 用户对已借阅的图书添加书评，支持评分和评论内容 (User adds a review to a book they have
        borrowed; includes rating and comment)
      parameters:
      - description: 书评请求参数 (Review Request)
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/models.ReviewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 添加成功 (Review added successfully)
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 请求数据无效 (Invalid request data)
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 仅可评论借阅过的书籍 (Only borrowed books can be reviewed)
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: 重复评论 (Already reviewed this book)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 数据库或事务错误 (Database or transaction error)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 添加图书书评 (Create a new review)
      tags:
      - 书评 (Review)
  /users/{id}:
    get:
      consumes:
      - application/json
      description: 根据用户 ID 获取用户名和注册时间 (Get username and registration time by user
        ID)
      parameters:
      - description: 用户 ID (User ID)
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应 (Success Response)
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: 无效用户 ID (Invalid user ID)
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 用户未找到 (User not found)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 数据库错误 (Database error)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取用户信息 (Retrieve user profile)
      tags:
      - 用户管理 (User Management)
  /users/{id}/records:
    get:
      consumes:
      - application/json
      description: 获取用户的借阅历史记录，包括书名、作者、ISBN、借阅时间等 (Get user's borrowing history with
        book details)
      parameters:
      - description: 用户 ID (User ID)
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 借阅记录列表 (Borrowing records list)
          schema:
            items:
              $ref: '#/definitions/models.BorrowingRecord'
            type: array
        "400":
          description: 无效用户 ID (Invalid user ID)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 数据库错误 (Database error)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取用户借阅记录 (Retrieve user borrowing history)
      tags:
      - 用户管理 (User Management)
swagger: "2.0"
