basePath: /
definitions:
  controllers.Book:
    properties:
      author:
        type: string
      available_copies:
        type: integer
      genre:
        type: string
      id:
        type: integer
      isbn:
        type: string
      language:
        type: string
      shelf_number:
        type: string
      title:
        type: string
    type: object
  controllers.LoginCredentials:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  controllers.User:
    properties:
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is the back-end API for an online library management system
  title: Library Management API 文档
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Retrieve all books in the library, supports search
      parameters:
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            items:
              $ref: '#/definitions/controllers.Book'
            type: array
        "500":
          description: Server error
          schema:
            type: string
      summary: Get All Books
      tags:
      - Book Management
  /login:
    post:
      consumes:
      - application/json
      description: Allows users to log in and receive a JWT token
      parameters:
      - description: User Login Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request data
          schema:
            type: string
        "401":
          description: Invalid username or password
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: User Login
      tags:
      - Authentication
  /register:
    post:
      consumes:
      - application/json
      description: Allows users to register a new account
      parameters:
      - description: User Information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.User'
      produces:
      - application/json
      responses:
        "201":
          description: Success Response
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request data
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: User Registration
      tags:
      - Authentication
swagger: "2.0"
